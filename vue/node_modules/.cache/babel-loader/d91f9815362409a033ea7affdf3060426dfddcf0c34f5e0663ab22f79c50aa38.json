{"ast":null,"code":"import PaseadoresService from \"@/services/PaseadoresService\";\nimport store from \"@/store/index\";\nimport moment from 'moment';\nimport NavCliente from \"@/components/Nav/NavCliente.vue\";\nexport default {\n  name: \"PaseadoresList\",\n  components: {\n    NavCliente\n  },\n  data() {\n    return {\n      paseadores: [],\n      notification: null,\n      message: \"\",\n      date: null,\n      time: null\n    };\n  },\n  mounted() {\n    this.fetchPaseadores();\n    this.fetchNotification();\n  },\n  methods: {\n    fetchPaseadores() {\n      const clientId = store.getters.getClientId;\n      const selectedTime = store.getters.getSelectedTime;\n      const selectedDate = new Date(store.getters.getSelectedDate);\n      const dayOfWeek = selectedDate.getDay();\n      const daysOfWeekNames = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\n      const diaSemana = daysOfWeekNames[dayOfWeek];\n\n      // Enviar los datos de fecha y hora en la URL de la solicitud GET\n      const fecha = moment(store.getters.getSelectedDate).format('YYYY-MM-DD'); // Convertir fecha a formato ISO (YYYY-MM-DD)\n\n      const horaInicial = selectedTime.split(' - ')[0];\n      // Salida: '7:00'\n\n      // Agregar los datos de fecha y hora a la URL de la solicitud GET\n      PaseadoresService.getByBarrio(clientId, {\n        dia_semana: diaSemana,\n        fecha: fecha,\n        hora: horaInicial\n      }).then(response => {\n        this.paseadores = response.data;\n        this.date = moment(store.getters.getSelectedDate).format('DD/MM/YYYY');\n        this.time = store.getters.getSelectedTime;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    fetchNotification() {\n      this.notification = store.state.notification;\n      this.message = store.state.message;\n      // Limpiar la notificación después de mostrarla\n      setTimeout(() => {\n        this.notification = null;\n        this.message = null;\n        store.commit('setNotification', null);\n        store.commit('setMessage', null);\n      }, 5000); // 5 segundos en milisegundos\n    },\n\n    getImageUrl(filename) {\n      if (filename) {\n        const imagePath = filename.replace('vue', '').replace('public', '');\n        const baseUrl = window.location.origin;\n        return `${baseUrl}/${imagePath}`;\n      }\n    }\n  },\n  computed: {\n    notificationClass() {\n      // Agrega las clases CSS según el tipo de notificación\n      return {\n        'notification-success': this.notification === 'success',\n        'notification-error': this.notification === 'error'\n      };\n    }\n  }\n};","map":{"version":3,"names":["PaseadoresService","store","moment","NavCliente","name","components","data","paseadores","notification","message","date","time","mounted","fetchPaseadores","fetchNotification","methods","clientId","getters","getClientId","selectedTime","getSelectedTime","selectedDate","Date","getSelectedDate","dayOfWeek","getDay","daysOfWeekNames","diaSemana","fecha","format","horaInicial","split","getByBarrio","dia_semana","hora","then","response","catch","error","console","log","state","setTimeout","commit","getImageUrl","filename","imagePath","replace","baseUrl","window","location","origin","computed","notificationClass"],"sources":["C:\\Users\\matih\\Desktop\\archive\\vue\\src\\components\\Cliente\\PaseadoresList.vue"],"sourcesContent":["<template>\r\n  <NavCliente />\r\n  <div class=\"general\">\r\n    <h1>Paseadores disponibles</h1>\r\n    <!-- Agregar la notificación aquí -->\r\n    <div v-if=\"notification\" class=\"notification\" :class=\"notificationClass\">\r\n      {{ message }}\r\n    </div>\r\n    <p>Fecha seleccionada: {{ date }}</p>\r\n    <p>Rango horario seleccionado: {{ time }}</p>\r\n    <div class=\"paseadores-grid\">\r\n\r\n      <div class=\"paseador-item\" v-for=\"paseador in paseadores\" :key=\"paseador.id+paseador.nombre\">\r\n        <img :src=\"getImageUrl(paseador.foto_perfil || '/uploads/default-profile.png')\"\r\n          :alt=\"paseador.nombre + ' ' + paseador.apellido\">\r\n        <router-link :to=\"'/paseador/' + paseador.id\">\r\n          <p>{{ paseador.nombre }} {{ paseador.apellido }}</p>\r\n        </router-link>\r\n        <router-link :to=\"'/paseador/' + paseador.id\">\r\n          <button class=\"ver-datos\">Ver datos</button>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import PaseadoresService from \"@/services/PaseadoresService\";\r\n  import store from \"@/store/index\";\r\n  import moment from 'moment';\r\n  import NavCliente from \"@/components/Nav/NavCliente.vue\";\r\n\r\n  export default {\r\n    name: \"PaseadoresList\",\r\n    components: {\r\n      NavCliente,\r\n    },\r\n    data() {\r\n      return {\r\n        paseadores: [],\r\n        notification: null,\r\n        message: \"\",\r\n        date: null,\r\n        time: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchPaseadores();\r\n      this.fetchNotification();\r\n    },\r\n    methods: {\r\n      fetchPaseadores() {\r\n        const clientId = store.getters.getClientId;\r\n        const selectedTime = store.getters.getSelectedTime;\r\n        const selectedDate = new Date(store.getters.getSelectedDate);\r\n        const dayOfWeek = selectedDate.getDay();\r\n        const daysOfWeekNames = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\r\n        const diaSemana = daysOfWeekNames[dayOfWeek];\r\n\r\n        // Enviar los datos de fecha y hora en la URL de la solicitud GET\r\n        const fecha = moment(store.getters.getSelectedDate).format(\r\n        'YYYY-MM-DD'); // Convertir fecha a formato ISO (YYYY-MM-DD)\r\n\r\n        const horaInicial = selectedTime.split(' - ')[0];\r\n        // Salida: '7:00'\r\n\r\n        // Agregar los datos de fecha y hora a la URL de la solicitud GET\r\n        PaseadoresService.getByBarrio(clientId, {\r\n            dia_semana: diaSemana,\r\n            fecha: fecha,\r\n            hora: horaInicial\r\n          })\r\n          .then((response) => {\r\n            this.paseadores = response.data;\r\n            this.date = moment(store.getters.getSelectedDate).format('DD/MM/YYYY');\r\n            this.time = store.getters.getSelectedTime;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      fetchNotification() {\r\n        this.notification = store.state.notification;\r\n        this.message = store.state.message;\r\n        // Limpiar la notificación después de mostrarla\r\n        setTimeout(() => {\r\n          this.notification = null;\r\n          this.message = null;\r\n          store.commit('setNotification', null);\r\n          store.commit('setMessage', null);\r\n        }, 5000); // 5 segundos en milisegundos\r\n      },\r\n      getImageUrl(filename) {\r\n        if (filename) {\r\n          const imagePath = filename.replace('vue', '').replace('public', '');\r\n          const baseUrl = window.location.origin;\r\n          return `${baseUrl}/${imagePath}`;\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      notificationClass() {\r\n        // Agrega las clases CSS según el tipo de notificación\r\n        return {\r\n          'notification-success': this.notification === 'success',\r\n          'notification-error': this.notification === 'error',\r\n        };\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .general {\r\n    min-height: 60vh;\r\n    margin: 0 auto;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-top: 15px;\r\n    padding-bottom: 40px;\r\n  }\r\n\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .paseadores-grid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .paseadores-grid img {\r\n    width: 60px;\r\n    border-radius: 100px;\r\n  }\r\n\r\n  .paseador-item {\r\n    width: calc(50% - 10px);\r\n    margin-bottom: 10px;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    border: 3px solid #8DBD47;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px;\r\n  }\r\n\r\n  .paseador-item p {\r\n    margin-top: 10px;\r\n    color: #000;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .ver-datos {\r\n    border-radius: 5px;\r\n    border: 1px solid #8DBD47;\r\n    background-color: #8DBD47;\r\n    font-size: 14px;\r\n    padding: 3px 15px;\r\n  }\r\n\r\n  .notification {\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .notification-success {\r\n    background-color: #dff0d8;\r\n    color: #3c763d;\r\n  }\r\n\r\n  .notification-error {\r\n    background-color: #f2dede;\r\n    color: #a94442;\r\n  }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}