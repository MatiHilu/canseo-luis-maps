{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ClientesService from \"@/services/ClientesService\";\nimport store from \"@/store/index\";\nexport default {\n  name: \"LoginCliente\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      showPassword: false\n    };\n  },\n  computed: {\n    notification() {\n      return store.getters.getNotification;\n    },\n    message() {\n      return store.getters.getMessage;\n    },\n    notificationClass() {\n      return {\n        error: this.notification === \"error\",\n        success: this.notification === \"success\"\n      };\n    },\n    passwordFieldType() {\n      return this.showPassword ? \"text\" : \"password\";\n    }\n  },\n  methods: {\n    login() {\n      const credentials = {\n        email: this.email,\n        password: this.password\n      };\n      ClientesService.login(credentials).then(response => {\n        const clientId = response.data.clientId;\n        store.commit('setClientId', clientId);\n        localStorage.setItem(\"Authorization\", 'Bearer ' + response.data.token);\n        // Redireccionar a la página de cliente autenticado\n        this.$router.push(\"/reservar\");\n\n        // Establecer notificación y mensaje en el store\n        store.commit('setNotification', 'success');\n        store.commit('setMessage', 'Inicio de sesión exitoso');\n      }).catch(error => {\n        console.log(\"Error al iniciar sesión como cliente: \", error);\n        store.commit(\"setNotification\", \"error\");\n        store.commit(\"setMessage\", \"Error al iniciar sesión email o contraseña incorrectas\");\n        this.$router.push(\"/login/clientes\");\n        setTimeout(() => {\n          store.commit(\"setNotification\", null);\n          store.commit(\"setMessage\", null);\n        }, 5000); // 5 segundos en milisegundos\n      });\n    },\n\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n  }\n};","map":{"version":3,"names":["ClientesService","store","name","data","email","password","showPassword","computed","notification","getters","getNotification","message","getMessage","notificationClass","error","success","passwordFieldType","methods","login","credentials","then","response","clientId","commit","localStorage","setItem","token","$router","push","catch","console","log","setTimeout","togglePasswordVisibility"],"sources":["C:\\Users\\matih\\Desktop\\archive\\vue\\src\\components\\Login\\LoginCliente.vue"],"sourcesContent":["<template>\r\n  <div class=\"general\">\r\n    <div v-if=\"notification\" class=\"notification\" :class=\"notificationClass\">\r\n      {{ message }}\r\n    </div>\r\n    <div class=\"login\">\r\n      <img class=\"canseo-img\" src=\"https://canseo-vue.vercel.app/uploads/Canseo-login.png\" alt=\"CanSeo\">\r\n      <form @submit.prevent=\"login\">\r\n        <div class=\"form-group\">\r\n          <input type=\"email\" id=\"email\" v-model=\"email\" required placeholder=\"Email\" autocomplete=\"username\">\r\n        </div>\r\n        <div class=\"form-group password-input\">\r\n          <input id=\"password\" v-model=\"password\" :type=\"passwordFieldType\" required placeholder=\"Contraseña\" autocomplete=\"current-password\">\r\n          <span type=\"button\" @click=\"togglePasswordVisibility\">\r\n            <img v-if=\"showPassword\" src=\"https://canseo-vue.vercel.app/uploads/show-password.png\" alt=\"Mostrar contraseña\">\r\n            <img v-else src=\"https://canseo-vue.vercel.app/uploads/hide-password.png\" alt=\"Ocultar contraseña\">\r\n          </span>\r\n        </div>\r\n        <button type=\"submit\">Iniciar</button>\r\n      </form>\r\n      <span><router-link to=\"/registro/cliente\" class=\"nav-link\">¿Aún no tenés una cuenta? <span class=\"boton-registro\">Registrate</span></router-link></span>\r\n      <span><router-link to=\"/login/paseadores\" class=\"nav-link soy-paseador\">Soy Paseador</router-link></span>   \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ClientesService from \"@/services/ClientesService\";\r\nimport store from \"@/store/index\";\r\n\r\nexport default {\r\n  name: \"LoginCliente\",\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      showPassword: false\r\n    };\r\n  },\r\n  computed: {\r\n    notification() {\r\n      return store.getters.getNotification;\r\n    },\r\n    message() {\r\n      return store.getters.getMessage;\r\n    },\r\n    notificationClass() {\r\n      return {\r\n        error: this.notification === \"error\",\r\n        success: this.notification === \"success\"\r\n      };\r\n    },\r\n    passwordFieldType() {\r\n      return this.showPassword ? \"text\" : \"password\";\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      const credentials = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      ClientesService.login(credentials)\r\n        .then(response => {\r\n          const clientId = response.data.clientId;\r\n          store.commit('setClientId', clientId);\r\n          localStorage.setItem(\"Authorization\", 'Bearer ' + response.data.token);\r\n          // Redireccionar a la página de cliente autenticado\r\n          this.$router.push(\"/reservar\");\r\n\r\n          // Establecer notificación y mensaje en el store\r\n          store.commit('setNotification', 'success');\r\n          store.commit('setMessage', 'Inicio de sesión exitoso');\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Error al iniciar sesión como cliente: \", error);\r\n          store.commit(\"setNotification\", \"error\");\r\n          store.commit(\"setMessage\", \"Error al iniciar sesión email o contraseña incorrectas\");\r\n          this.$router.push(\"/login/clientes\");\r\n          setTimeout(() => {\r\n            store.commit(\"setNotification\", null);\r\n            store.commit(\"setMessage\", null);\r\n          }, 5000); // 5 segundos en milisegundos\r\n        });\r\n    },\r\n    togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.general{\r\n  min-height: 90vh;  \r\n  margin: 0 auto;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-top: 15px;\r\n  padding-bottom: 40px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.canseo-img{\r\n  margin-top: 20px;\r\n  margin-bottom: 24px;\r\n  width: 180px;\r\n}\r\n\r\n.login{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\nform{\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n}\r\n\r\nspan a{\r\n  color: #000;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 30px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: 0px solid;\r\n  border-bottom: 1px solid #000;\r\n}\r\n\r\nbutton {\r\n  border-radius: 5px;\r\n  border: 1px solid #8DBD47;\r\n  background-color: #8DBD47;\r\n  font-size: 18px;\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n  width: 50%;\r\n  align-self: center;\r\n}\r\n\r\n.notification {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n\r\n}\r\n\r\n.error {\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n}\r\n\r\n.success {\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n}\r\n\r\n.password-input {\r\n  position: relative;\r\n}\r\n\r\n.password-input span {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 5px;\r\n  transform: translateY(-50%);\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.password-input span:focus {\r\n  outline: none;\r\n}\r\n\r\n.password-input img {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.soy-paseador{\r\n  background: #000;\r\n  color: #fff;\r\n  border-radius: 8px;\r\n  padding: 5px 20px;\r\n  font-size: 14px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.boton-registro{\r\ntext-decoration: underline;  \r\n}\r\n</style>\r\n"],"mappings":";AA2BA,OAAOA,eAAc,MAAO,4BAA4B;AACxD,OAAOC,KAAI,MAAO,eAAe;AAEjC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAOP,KAAK,CAACQ,OAAO,CAACC,eAAe;IACtC,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,OAAOV,KAAK,CAACQ,OAAO,CAACG,UAAU;IACjC,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,OAAO;QACLC,KAAK,EAAE,IAAI,CAACN,YAAW,KAAM,OAAO;QACpCO,OAAO,EAAE,IAAI,CAACP,YAAW,KAAM;MACjC,CAAC;IACH,CAAC;IACDQ,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACV,YAAW,GAAI,MAAK,GAAI,UAAU;IAChD;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,MAAMC,WAAU,GAAI;QAClBf,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAEDL,eAAe,CAACkB,KAAK,CAACC,WAAW,EAC9BC,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,QAAO,GAAID,QAAQ,CAAClB,IAAI,CAACmB,QAAQ;QACvCrB,KAAK,CAACsB,MAAM,CAAC,aAAa,EAAED,QAAQ,CAAC;QACrCE,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,SAAQ,GAAIJ,QAAQ,CAAClB,IAAI,CAACuB,KAAK,CAAC;QACtE;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;;QAE9B;QACA3B,KAAK,CAACsB,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC;QAC1CtB,KAAK,CAACsB,MAAM,CAAC,YAAY,EAAE,0BAA0B,CAAC;MACxD,CAAC,EACAM,KAAK,CAACf,KAAI,IAAK;QACdgB,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEjB,KAAK,CAAC;QAC5Db,KAAK,CAACsB,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC;QACxCtB,KAAK,CAACsB,MAAM,CAAC,YAAY,EAAE,wDAAwD,CAAC;QACpF,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;QACpCI,UAAU,CAAC,MAAM;UACf/B,KAAK,CAACsB,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC;UACrCtB,KAAK,CAACsB,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC,EAAE;MACZ,CAAC,CAAC;IACN,CAAC;;IACDU,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAAC3B,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}