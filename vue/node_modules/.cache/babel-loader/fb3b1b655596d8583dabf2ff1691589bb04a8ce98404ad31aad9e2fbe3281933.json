{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ClientesService from \"@/services/ClientesService\";\nimport BarriosService from \"@/services/BarriosService\";\nimport RazasService from \"@/services/RazasService\";\nimport store from \"@/store/index\";\nexport default {\n  name: \"AddCliente\",\n  data() {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      email: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      password: \"\",\n      foto_perfil: \"\",\n      idBarrio: \"\",\n      nombrePerro: \"\",\n      idRaza: \"\",\n      barrios: [],\n      razas: [],\n      showPassword: false\n    };\n  },\n  computed: {\n    notification() {\n      return store.getters.getNotification;\n    },\n    message() {\n      return store.getters.getMessage;\n    },\n    notificationClass() {\n      return {\n        error: this.notification === \"error\",\n        success: this.notification === \"success\"\n      };\n    },\n    passwordFieldType() {\n      return this.showPassword ? \"text\" : \"password\";\n    }\n  },\n  mounted() {\n    this.fetchBarrios();\n    this.fetchRazas();\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.foto_perfil = event.target.files[0];\n    },\n    fetchBarrios() {\n      BarriosService.getAll().then(response => {\n        this.barrios = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    fetchRazas() {\n      RazasService.getAll().then(response => {\n        this.razas = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    agregarCliente() {\n      const nuevoCliente = new FormData();\n      nuevoCliente.append('nombre', this.nombre);\n      nuevoCliente.append('apellido', this.apellido);\n      nuevoCliente.append('email', this.email);\n      nuevoCliente.append('telefono', this.telefono);\n      nuevoCliente.append('direccion', this.direccion);\n      nuevoCliente.append('password', this.password);\n      nuevoCliente.append('id_barrio', this.idBarrio);\n      nuevoCliente.append('foto_perfil', this.foto_perfil);\n      nuevoCliente.append('nombre_perro', this.nombrePerro);\n      nuevoCliente.append('id_raza', this.idRaza);\n      console.log(\"Datos enviados al backend:\", Object.fromEntries(nuevoCliente));\n      ClientesService.create(nuevoCliente).then(response => {\n        console.log(\"Cliente agregado exitosamente: \", response.data);\n        // Realizar acciones adicionales después de agregar un cliente (redireccionar, mostrar mensaje, etc.)\n        this.$router.push(\"/login/clientes\");\n        store.commit('setNotification', 'success');\n        store.commit('setMessage', 'Registro exitoso');\n      }).catch(error => {\n        console.log(\"Error al agregar el cliente: \", error);\n        // Manejar el error y mostrar un mensaje de error al usuario si es necesario\n        store.commit(\"setNotification\", \"error\");\n        store.commit(\"setMessage\", \"Error al realizar el registro\");\n        this.$router.push(\"/registro/cliente\");\n        setTimeout(() => {\n          store.commit(\"setNotification\", null);\n          store.commit(\"setMessage\", null);\n        }, 5000); // 5 segundos en milisegundos\n      });\n    },\n\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n  }\n};","map":{"version":3,"names":["ClientesService","BarriosService","RazasService","store","name","data","nombre","apellido","email","telefono","direccion","password","foto_perfil","idBarrio","nombrePerro","idRaza","barrios","razas","showPassword","computed","notification","getters","getNotification","message","getMessage","notificationClass","error","success","passwordFieldType","mounted","fetchBarrios","fetchRazas","methods","handleFileUpload","event","target","files","getAll","then","response","catch","console","log","agregarCliente","nuevoCliente","FormData","append","Object","fromEntries","create","$router","push","commit","setTimeout","togglePasswordVisibility"],"sources":["C:\\Users\\matih\\Desktop\\archive\\vue\\src\\components\\Registro\\AddCliente.vue"],"sourcesContent":["<template>\r\n    <div class=\"general\">\r\n      <div v-if=\"notification\" class=\"notification\" :class=\"notificationClass\">\r\n      {{ message }}\r\n      </div>\r\n      <div class=\"registro\">\r\n        <h1>Registro</h1>\r\n        <img class=\"canseo-img\" src=\"https://canseo-vue.vercel.app/uploads/Canseo-registro.png\" alt=\"CanSeo \">\r\n        <form @submit.prevent=\"agregarCliente\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"nombre\" v-model=\"nombre\" required placeholder=\"Nombre\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"apellido\" v-model=\"apellido\" required placeholder=\"Apellido\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"email\" id=\"email\" v-model=\"email\" required placeholder=\"Email\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"password-input\">\r\n              <input id=\"password\" v-model=\"password\" :type=\"passwordFieldType\" required placeholder=\"Contraseña\">\r\n              <span type=\"button\" @click=\"togglePasswordVisibility\">\r\n                <img v-if=\"showPassword\" src=\"https://canseo-vue.vercel.app/uploads/show-password.png\" alt=\"Mostrar contraseña\">\r\n                <img v-else src=\"https://canseo-vue.vercel.app/uploads/hide-password.png\" alt=\"Ocultar contraseña\">\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"telefono\" v-model=\"telefono\" required placeholder=\"Teléfono\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"direccion\" v-model=\"direccion\" required placeholder=\"Dirección\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <select id=\"id_barrio\" v-model=\"idBarrio\" required>\r\n              <option value=\"\">Seleccioná tu barrio</option>\r\n              <option v-for=\"barrio in barrios\" :key=\"barrio.id\" :value=\"barrio.id\">{{ barrio.nombre }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"nombre_perro\" v-model=\"nombrePerro\" required placeholder=\"Nombre de su perro\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <select id=\"id_raza\" v-model=\"idRaza\" required>\r\n              <option value=\"\">Seleccioná la raza de tu perro</option>\r\n              <option v-for=\"raza in razas\" :key=\"raza.id\" :value=\"raza.id\">{{ raza.nombre }}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"foto_perfil\">Foto de perfil</label>\r\n            <input type=\"file\" id=\"foto_perfil\" @change=\"handleFileUpload\">\r\n          </div>\r\n          <button type=\"submit\">Registrarme</button>\r\n        </form>\r\n        <span><router-link to=\"/login/clientes\" class=\"nav-link\">¿Ya tenés una cuenta? <span class=\"boton-registro\">Iniciar sesión</span></router-link></span>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import ClientesService from \"@/services/ClientesService\";\r\n  import BarriosService from \"@/services/BarriosService\";\r\n  import RazasService from \"@/services/RazasService\";\r\n  import store from \"@/store/index\";\r\n  \r\n  export default {\r\n    name: \"AddCliente\",\r\n    data() {\r\n      return {\r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        email: \"\",\r\n        telefono: \"\",\r\n        direccion: \"\",\r\n        password: \"\",\r\n        foto_perfil: \"\",\r\n        idBarrio: \"\",\r\n        nombrePerro: \"\",\r\n        idRaza: \"\",\r\n        barrios: [],\r\n        razas: [],\r\n        showPassword: false\r\n      };\r\n    },\r\n    computed: {\r\n      notification() {\r\n      return store.getters.getNotification;\r\n      },\r\n      message() {\r\n        return store.getters.getMessage;\r\n      },\r\n      notificationClass() {\r\n        return {\r\n          error: this.notification === \"error\",\r\n          success: this.notification === \"success\"\r\n        };\r\n      },\r\n      passwordFieldType() {\r\n        return this.showPassword ? \"text\" : \"password\";\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchBarrios();\r\n      this.fetchRazas();\r\n    },\r\n    methods: {\r\n      handleFileUpload(event) {\r\n        this.foto_perfil = event.target.files[0];\r\n      },\r\n      fetchBarrios() {\r\n        BarriosService.getAll()\r\n          .then(response => {\r\n            this.barrios = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      fetchRazas() {\r\n        RazasService.getAll()\r\n          .then(response => {\r\n            this.razas = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      agregarCliente() {\r\n        const nuevoCliente = new FormData();\r\n        nuevoCliente.append('nombre', this.nombre);\r\n        nuevoCliente.append('apellido', this.apellido);\r\n        nuevoCliente.append('email', this.email);\r\n        nuevoCliente.append('telefono', this.telefono);\r\n        nuevoCliente.append('direccion', this.direccion);\r\n        nuevoCliente.append('password', this.password);\r\n        nuevoCliente.append('id_barrio', this.idBarrio);\r\n        nuevoCliente.append('foto_perfil', this.foto_perfil);\r\n        nuevoCliente.append('nombre_perro', this.nombrePerro);\r\n        nuevoCliente.append('id_raza', this.idRaza);\r\n\r\n      console.log(\"Datos enviados al backend:\", Object.fromEntries(nuevoCliente));\r\n\r\n  \r\n        ClientesService.create(nuevoCliente)\r\n          .then(response => {\r\n            console.log(\"Cliente agregado exitosamente: \", response.data);\r\n            // Realizar acciones adicionales después de agregar un cliente (redireccionar, mostrar mensaje, etc.)\r\n            this.$router.push(\"/login/clientes\");\r\n            store.commit('setNotification', 'success');\r\n            store.commit('setMessage', 'Registro exitoso');\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Error al agregar el cliente: \", error);\r\n            // Manejar el error y mostrar un mensaje de error al usuario si es necesario\r\n            store.commit(\"setNotification\", \"error\");\r\n            store.commit(\"setMessage\", \"Error al realizar el registro\");\r\n            this.$router.push(\"/registro/cliente\");\r\n            setTimeout(() => {\r\n              store.commit(\"setNotification\", null);\r\n              store.commit(\"setMessage\", null);\r\n            }, 5000); // 5 segundos en milisegundos\r\n          });\r\n      },\r\n      togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n .general{\r\n  min-height: 60vh;  \r\n  margin: 0 auto;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-top: 15px;\r\n  padding-bottom: 40px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.canseo-img{\r\n  width: 180px;\r\n}\r\n\r\n.registro{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\nform{\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nspan a{\r\n  color: #000;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.paseadores{\r\n  font-weight: 600;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 30px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: 0px solid;\r\n  border-bottom: 1px solid #000;\r\n}\r\n\r\nselect{\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: 0px solid;\r\n  border-bottom: 1px solid #000;\r\n}\r\n\r\nbutton {\r\n  border-radius: 5px;\r\n  border: 1px solid #8DBD47;\r\n  background-color: #8DBD47;\r\n  font-size: 18px;\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n  width: 50%;\r\n  align-self: center;\r\n}\r\n\r\n.notification {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n\r\n}\r\n\r\n.error {\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n}\r\n\r\n.success {\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n}\r\n\r\n.password-input {\r\n  position: relative;\r\n}\r\n\r\n.password-input span {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 5px;\r\n  transform: translateY(-50%);\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.password-input span:focus {\r\n  outline: none;\r\n}\r\n\r\n.password-input img {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.boton-registro{\r\ntext-decoration: underline;  \r\n}\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}