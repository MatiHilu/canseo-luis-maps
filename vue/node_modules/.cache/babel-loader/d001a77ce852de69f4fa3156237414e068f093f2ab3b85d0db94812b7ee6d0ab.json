{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5a8d9ea7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"general\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Paseadores disponibles\", -1));\nconst _hoisted_3 = {\n  class: \"paseadores-grid\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"ver-datos\"\n}, \"Ver datos\", -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavCliente = _resolveComponent(\"NavCliente\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavCliente), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $data.notification ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"notification\", $options.notificationClass])\n  }, _toDisplayString($data.message), 3)) : _createCommentVNode(\"\", true), _createElementVNode(\"p\", null, \"Fecha seleccionada: \" + _toDisplayString($data.date), 1), _createElementVNode(\"p\", null, \"Rango horario seleccionado: \" + _toDisplayString($data.time), 1), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paseadores, paseador => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"paseador-item\",\n      key: paseador.id + paseador.nombre\n    }, [_createElementVNode(\"img\", {\n      src: $options.getImageUrl(paseador.foto_perfil || '/uploads/default-profile.png'),\n      alt: paseador.nombre + ' ' + paseador.apellido\n    }, null, 8, _hoisted_4), _createVNode(_component_router_link, {\n      to: '/paseador/' + paseador.id\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(paseador.nombre) + \" \" + _toDisplayString(paseador.apellido), 1)]),\n      _: 2\n    }, 1032, [\"to\"]), _createVNode(_component_router_link, {\n      to: '/paseador/' + paseador.id\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 2\n    }, 1032, [\"to\"])]);\n  }), 128))])])], 64);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_NavCliente","_hoisted_1","_hoisted_2","$data","notification","_createElementBlock","_normalizeClass","$options","notificationClass","message","_toDisplayString","date","time","_hoisted_3","_Fragment","_renderList","paseadores","paseador","key","id","nombre","src","getImageUrl","foto_perfil","alt","apellido","_component_router_link","to","_hoisted_5"],"sources":["/home/canseomatias/htdocs/canseo.site/vue/src/components/Cliente/PaseadoresList.vue"],"sourcesContent":["<template>\r\n  <NavCliente />\r\n  <div class=\"general\">\r\n    <h1>Paseadores disponibles</h1>\r\n    <!-- Agregar la notificación aquí -->\r\n    <div v-if=\"notification\" class=\"notification\" :class=\"notificationClass\">\r\n      {{ message }}\r\n    </div>\r\n    <p>Fecha seleccionada: {{ date }}</p>\r\n    <p>Rango horario seleccionado: {{ time }}</p>\r\n    <div class=\"paseadores-grid\">\r\n\r\n      <div class=\"paseador-item\" v-for=\"paseador in paseadores\" :key=\"paseador.id+paseador.nombre\">\r\n        <img :src=\"getImageUrl(paseador.foto_perfil || '/uploads/default-profile.png')\"\r\n          :alt=\"paseador.nombre + ' ' + paseador.apellido\">\r\n        <router-link :to=\"'/paseador/' + paseador.id\">\r\n          <p>{{ paseador.nombre }} {{ paseador.apellido }}</p>\r\n        </router-link>\r\n        <router-link :to=\"'/paseador/' + paseador.id\">\r\n          <button class=\"ver-datos\">Ver datos</button>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import PaseadoresService from \"@/services/PaseadoresService\";\r\n  import store from \"@/store/index\";\r\n  import moment from 'moment';\r\n  import NavCliente from \"@/components/Nav/NavCliente.vue\";\r\n\r\n  export default {\r\n    name: \"PaseadoresList\",\r\n    components: {\r\n      NavCliente,\r\n    },\r\n    data() {\r\n      return {\r\n        paseadores: [],\r\n        notification: null,\r\n        message: \"\",\r\n        date: null,\r\n        time: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchPaseadores();\r\n      this.fetchNotification();\r\n    },\r\n    methods: {\r\n      fetchPaseadores() {\r\n        const clientId = store.getters.getClientId;\r\n        const selectedTime = store.getters.getSelectedTime;\r\n        const selectedDate = new Date(store.getters.getSelectedDate);\r\n        const dayOfWeek = selectedDate.getDay();\r\n        const daysOfWeekNames = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\r\n        const diaSemana = daysOfWeekNames[dayOfWeek];\r\n\r\n        // Enviar los datos de fecha y hora en la URL de la solicitud GET\r\n        const fecha = moment(store.getters.getSelectedDate).format(\r\n        'YYYY-MM-DD'); // Convertir fecha a formato ISO (YYYY-MM-DD)\r\n\r\n        const horaInicial = selectedTime.split(' - ')[0];\r\n        // Salida: '7:00'\r\n\r\n        // Agregar los datos de fecha y hora a la URL de la solicitud GET\r\n        PaseadoresService.getByBarrio(clientId, {\r\n            dia_semana: diaSemana,\r\n            fecha: fecha,\r\n            hora: horaInicial\r\n          })\r\n          .then((response) => {\r\n            this.paseadores = response.data;\r\n            this.date = moment(store.getters.getSelectedDate).format('DD/MM/YYYY');\r\n            this.time = store.getters.getSelectedTime;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      fetchNotification() {\r\n        this.notification = store.state.notification;\r\n        this.message = store.state.message;\r\n        // Limpiar la notificación después de mostrarla\r\n        setTimeout(() => {\r\n          this.notification = null;\r\n          this.message = null;\r\n          store.commit('setNotification', null);\r\n          store.commit('setMessage', null);\r\n        }, 5000); // 5 segundos en milisegundos\r\n      },\r\n      getImageUrl(filename) {\r\n        if (filename) {\r\n          const imagePath = filename.replace('vue', '').replace('public', '');\r\n          const baseUrl = window.location.origin;\r\n          return `${baseUrl}/${imagePath}`;\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      notificationClass() {\r\n        // Agrega las clases CSS según el tipo de notificación\r\n        return {\r\n          'notification-success': this.notification === 'success',\r\n          'notification-error': this.notification === 'error',\r\n        };\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .general {\r\n    min-height: 60vh;\r\n    margin: 0 auto;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-top: 15px;\r\n    padding-bottom: 40px;\r\n  }\r\n\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .paseadores-grid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .paseadores-grid img {\r\n    width: 60px;\r\n    border-radius: 100px;\r\n  }\r\n\r\n  .paseador-item {\r\n    width: calc(50% - 10px);\r\n    margin-bottom: 10px;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    border: 3px solid #8DBD47;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px;\r\n  }\r\n\r\n  .paseador-item p {\r\n    margin-top: 10px;\r\n    color: #000;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .ver-datos {\r\n    border-radius: 5px;\r\n    border: 1px solid #8DBD47;\r\n    background-color: #8DBD47;\r\n    font-size: 14px;\r\n    padding: 3px 15px;\r\n  }\r\n\r\n  .notification {\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .notification-success {\r\n    background-color: #dff0d8;\r\n    color: #3c763d;\r\n  }\r\n\r\n  .notification-error {\r\n    background-color: #f2dede;\r\n    color: #a94442;\r\n  }\r\n</style>\r\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAS;gEAClBC,mBAAA,CAA+B,YAA3B,wBAAsB;;EAOrBD,KAAK,EAAC;AAAiB;;gEAStBC,mBAAA,CAA4C;EAApCD,KAAK,EAAC;AAAW,GAAC,WAAS;;;;6DAlB3CE,YAAA,CAAcC,qBAAA,GACdF,mBAAA,CAqBM,OArBNG,UAqBM,GApBJC,UAA+B,EAEpBC,KAAA,CAAAC,YAAY,I,cAAvBC,mBAAA,CAEM;;IAFmBR,KAAK,EAAAS,eAAA,EAAC,cAAc,EAASC,QAAA,CAAAC,iBAAiB;sBAClEL,KAAA,CAAAM,OAAO,S,+BAEZX,mBAAA,CAAqC,WAAlC,sBAAoB,GAAAY,gBAAA,CAAGP,KAAA,CAAAQ,IAAI,OAC9Bb,mBAAA,CAA6C,WAA1C,8BAA4B,GAAAY,gBAAA,CAAGP,KAAA,CAAAS,IAAI,OACtCd,mBAAA,CAYM,OAZNe,UAYM,I,kBAVJR,mBAAA,CASMS,SAAA,QAAAC,WAAA,CATwCZ,KAAA,CAAAa,UAAU,EAAtBC,QAAQ;yBAA1CZ,mBAAA,CASM;MATDR,KAAK,EAAC,eAAe;MAAiCqB,GAAG,EAAED,QAAQ,CAACE,EAAE,GAACF,QAAQ,CAACG;QACnFtB,mBAAA,CACmD;MAD7CuB,GAAG,EAAEd,QAAA,CAAAe,WAAW,CAACL,QAAQ,CAACM,WAAW;MACxCC,GAAG,EAAEP,QAAQ,CAACG,MAAM,SAASH,QAAQ,CAACQ;6BACzC1B,YAAA,CAEc2B,sBAAA;MAFAC,EAAE,iBAAiBV,QAAQ,CAACE;;wBACxC,MAAoD,CAApDrB,mBAAA,CAAoD,WAAAY,gBAAA,CAA9CO,QAAQ,CAACG,MAAM,IAAG,GAAC,GAAAV,gBAAA,CAAGO,QAAQ,CAACQ,QAAQ,M;;sBAE/C1B,YAAA,CAEc2B,sBAAA;MAFAC,EAAE,iBAAiBV,QAAQ,CAACE;;wBACxC,MAA4C,CAA5CS,UAA4C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}